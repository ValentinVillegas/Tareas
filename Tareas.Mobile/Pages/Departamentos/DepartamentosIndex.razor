@page "/departamentos"
@inject IRepository repositorio
@inject SweetAlertService swAlSe

@if (Departamentos is null)
{
    <p>Cargando...</p>
}
else
{
    <div class="card">
        <div class="card-header">
            <span>
                <i class="oi oi-layers"/> Catálogo de departamentos
                <a class="btn btn-sm btn-primary float-end" href="/departamentos/nuevo"><i class="oi oi-plus" /> Nuevo</a>
            </span>
        </div>

        <div class="card-body">
            <ListaGenerica ListaElementos="Departamentos">
                <Body>
                    <table class="table table-striped">
                        <thead>
                            <tr class="text-center">
                                <th width="300">Nombre</th>
                                <th width="300">Trabajadores</th>
                                <th width="300">Estatus</th>
                            </tr>
                        </thead>

                        <tbody>
                            @foreach (var departamento in Departamentos)
                            {
                                <tr>
                                    <td class="align-middle"><a href="/departamentos/editar/@departamento.Id" style="text-decoration:none;">@departamento.Nombre</a></td>
                                    <td class="align-middle">@departamento.CantEmpleados</td>
                                    <td class="align-middle">@departamento.Estatus.ToString()</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </Body>
            </ListaGenerica>
        </div>
    </div>
}

@code {
    public List<Departamento> Departamentos { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await CargaDepartamentos();
    }

    private async Task CargaDepartamentos()
    {
        var responseHttp = await repositorio.Get<List<Departamento>>("/api/departamentos");

        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
            await swAlSe.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }

        Departamentos = responseHttp.Response;
    }
}
